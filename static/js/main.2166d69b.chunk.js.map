{"version":3,"sources":["Components/Form/Form.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactList/ContactList.module.css","Components/Form/Form.module.css"],"names":["Form","state","name","number","onNameChange","e","setState","target","value","onNumberChange","localSubmit","preventDefault","props","onFormSubmit","id","uuidv4","setTimeout","onSubmit","this","onChange","className","type","pattern","title","required","s","button","React","Component","ContactList","contactsArray","deleteContact","console","log","map","contact","contactNumber","onClick","Filter","onChangeFilter","App","contacts","filter","find","i","alert","filteredContacts","toLowerCase","includes","onFilterChange","onDeleteContact","item","filteredArray","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0RAmEeA,E,4MA9DbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEJ,KAAMG,EAAEE,OAAOC,S,EAGjCC,eAAiB,SAAAJ,GACf,EAAKC,SAAS,CAAEH,OAAQE,EAAEE,OAAOC,S,EAGnCE,YAAc,SAAAL,GACZA,EAAEM,iBACF,EAAKC,MAAMC,aAAa,CACtBC,GAAIC,cACJb,KAAM,EAAKD,MAAMC,KACjBC,OAAQ,EAAKF,MAAME,SAErBa,YAAW,WACT,EAAKV,SAAS,CAAEJ,KAAM,GAAIC,OAAQ,OACjC,M,4CAGL,WACE,OACE,mCACE,uBAAMc,SAAUC,KAAKR,YAArB,UACE,qCACA,uBACES,SAAUD,KAAKd,aACfI,MAAOU,KAAKjB,MAAMC,KAClBkB,UAAU,GACVC,KAAK,OACLnB,KAAK,OACLoB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,IAEV,uBACA,sCAEA,uBACEL,SAAUD,KAAKT,eACfD,MAAOU,KAAKjB,MAAME,OAClBkB,KAAK,MACLnB,KAAK,SACLoB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,IAEV,uBACA,wBAAQJ,UAAWK,IAAEC,OAAQL,KAAK,SAAlC,kC,GAtDSM,IAAMC,W,gBCgCVC,EAjCK,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAEpC,OADAC,QAAQC,IAAIH,GAEV,mCACE,6BACGA,EAAcI,KAAI,SAAAC,GAAO,OACxB,+BACE,uBAAMf,UAAWK,IAAEU,QAAnB,UAA6BA,EAAQjC,KAArC,OAAmD,IACnD,sBAAMkB,UAAWK,IAAEW,cAAnB,SAAmCD,EAAQhC,SAC3C,wBACEiB,UAAWK,IAAEC,OACbW,QAAS,kBAAMN,EAAcI,EAAQrB,KAFvC,sBAHOqB,EAAQrB,YCGZwB,EARA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAChB,OAAO,uBAAOpB,SAAUoB,KC0DXC,E,4MAxDbvC,MAAQ,CACNwC,SAAU,GACVC,OAAQ,I,EAGV7B,aAAe,SAAAsB,GACK,EAAKlC,MAAMwC,SAASE,MAAK,SAAAC,GAAC,OAAIA,EAAE1C,OAASiC,EAAQjC,QAEjE2C,MAAM,GAAD,OAAIV,EAAQjC,KAAZ,4BAEL,EAAKI,SAAS,CAAEmC,SAAS,GAAD,mBAAM,EAAKxC,MAAMwC,UAAjB,CAA2BN,O,EAIvDW,iBAAmB,WACjB,MAA0B,KAAtB,EAAK7C,MAAMyC,OAEN,EAAKzC,MAAMwC,SAASC,QAAO,SAAAE,GAAC,OACjCA,EAAE1C,KAAK6C,cAAcC,SAAS,EAAK/C,MAAMyC,OAAOK,kBAI7C,EAAK9C,MAAMwC,U,EAGpBQ,eAAiB,SAAA5C,GACf,IAAMqC,EAASrC,EAAEE,OAAOC,MACxB,EAAKF,SAAS,CAAEoC,OAAQA,K,EAG1BQ,gBAAkB,SAAApC,GAChBkB,QAAQC,IAAInB,GACZ,EAAKR,SAAS,CACZmC,SAAU,EAAKxC,MAAMwC,SAASC,QAAO,SAAAS,GAAI,OAAIA,EAAKrC,KAAOA,Q,4CAI7D,WACE,OACE,qCACE,2CACA,cAAC,EAAD,CAAMD,aAAcK,KAAKL,eACzB,0CACA,cAAC,EAAD,CACEuC,cAAelC,KAAK4B,iBACpBP,eAAgBrB,KAAK+B,iBAEvB,cAAC,EAAD,CACElB,cAAeb,KAAKgC,gBACpBpB,cAAeZ,KAAK4B,4B,GAlDZnB,IAAMC,WCDxByB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,QAAU,6BAA6B,OAAS,4BAA4B,cAAgB,qC,kBCA9GD,EAAOC,QAAU,CAAC,OAAS,wB","file":"static/js/main.2166d69b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './Form.module.css';\r\n\r\nclass Form extends React.Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  onNameChange = e => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n\r\n  onNumberChange = e => {\r\n    this.setState({ number: e.target.value });\r\n  };\r\n\r\n  localSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onFormSubmit({\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({ name: '', number: '' });\r\n    }, 2000);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form onSubmit={this.localSubmit}>\r\n          <p>Name</p>\r\n          <input\r\n            onChange={this.onNameChange}\r\n            value={this.state.name}\r\n            className=\"\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n          <br></br>\r\n          <p>Phone</p>\r\n\r\n          <input\r\n            onChange={this.onNumberChange}\r\n            value={this.state.number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n          <br></br>\r\n          <button className={s.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contactsArray, deleteContact }) => {\r\n  console.log(contactsArray);\r\n  return (\r\n    <>\r\n      <ul>\r\n        {contactsArray.map(contact => (\r\n          <li key={contact.id}>\r\n            <span className={s.contact}>{contact.name}:</span>{' '}\r\n            <span className={s.contactNumber}>{contact.number}</span>\r\n            <button\r\n              className={s.button}\r\n              onClick={() => deleteContact(contact.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contactsArray: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n  deleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\n\r\n// props -  object! {}\r\n// props.onChangeFilter\r\nconst Filter = ({ onChangeFilter }) => {\r\n  return <input onChange={onChangeFilter}></input>;\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import './App.css';\nimport React from 'react';\nimport Form from './Components/Form/Form';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  onFormSubmit = contact => {\n    let existedName = this.state.contacts.find(i => i.name === contact.name);\n    if (existedName) {\n      alert(`${contact.name} is already in contacts`);\n    } else {\n      this.setState({ contacts: [...this.state.contacts, contact] });\n    }\n  };\n\n  filteredContacts = () => {\n    if (this.state.filter !== '') {\n      // i - {id: '', name: '', number: ''}\n      return this.state.contacts.filter(i =>\n        i.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n      );\n    }\n\n    return this.state.contacts;\n  };\n\n  onFilterChange = e => {\n    const filter = e.target.value;\n    this.setState({ filter: filter });\n  };\n\n  onDeleteContact = id => {\n    console.log(id);\n    this.setState({\n      contacts: this.state.contacts.filter(item => item.id !== id),\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <Form onFormSubmit={this.onFormSubmit}></Form>\n        <h2>Contacts</h2>\n        <Filter\n          filteredArray={this.filteredContacts}\n          onChangeFilter={this.onFilterChange}\n        ></Filter>\n        <ContactList\n          deleteContact={this.onDeleteContact}\n          contactsArray={this.filteredContacts()}\n        ></ContactList>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__zgZ51\",\"button\":\"ContactList_button__2iUgV\",\"contactNumber\":\"ContactList_contactNumber__1NTq3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Form_button__3-2ds\"};"],"sourceRoot":""}