{"version":3,"sources":["Components/Form/Form.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactList/ContactList.module.css","Components/Form/Form.module.css"],"names":["Form","state","name","number","onNameChange","e","setState","target","value","onNumberChange","localSubmit","preventDefault","props","onFormSubmit","id","uuidv4","setTimeout","onSubmit","this","onChange","className","type","pattern","title","required","s","button","React","Component","ContactList","contactsArray","deleteContact","console","log","map","contact","contactNumber","onClick","Filter","onChangeFilter","App","contacts","filter","find","i","alert","filteredContacts","toLowerCase","includes","onFilterChange","onDeleteContact","item","filteredArray","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.67bd93ae.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './Form.module.css'\r\n\r\nclass Form extends React.Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n    \r\n    onNameChange = e => {\r\n        this.setState({ name: e.target.value });\r\n      }\r\n\r\n      onNumberChange = (e) => {\r\n          this.setState({ number: e.target.value });\r\n      }\r\n\r\n    localSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.onFormSubmit({ id: uuidv4(), name: this.state.name, number: this.state.number })\r\n        setTimeout(() => {\r\n            this.setState({name: '', number: ''});\r\n        }, 2000);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n                <form onSubmit={this.localSubmit}>\r\n                    <p>Name</p>\r\n                    <input\r\n                        onChange={this.onNameChange}\r\n                        value={this.state.name}\r\n                        className=''\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                    />\r\n                    <br></br>\r\n                    <p>Phone</p>\r\n                    <input\r\n                        onChange={this.onNumberChange}\r\n                        value={this.state.number}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                    />\r\n                    <br></br>\r\n                    <button className={s.button} type=\"submit\" >Add contact</button>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Form;","import s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contactsArray, deleteContact }) => {\r\n\r\n\r\n    console.log(contactsArray);\r\n    return (\r\n        \r\n        <>\r\n            <ul>\r\n                {contactsArray.map((contact) => <li \r\n                \r\n                key={contact.id}><span className={s.contact}>{contact.name}:</span> <span className={s.contactNumber}>{contact.number}</span>\r\n                <button\r\n                className={s.button} \r\n                onClick={() => deleteContact(contact.id)}>Delete</button>\r\n                </li>\r\n                )}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contactsArray: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string,\r\n            name: PropTypes.string,\r\n            number: PropTypes.string,\r\n        })\r\n    ),\r\n    deleteContact: PropTypes.func,\r\n}\r\n\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types'\r\n\r\n// props -  object! {}\r\n// props.onChangeFilter\r\nconst Filter = ({ onChangeFilter })  => {\r\n    \r\n\r\n    return(\r\n        <input  onChange={onChangeFilter}></input>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    onChangeFilter: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\nexport default Filter;","import './App.css';\nimport React from 'react';\nimport Form from './Components/Form/Form';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: ''\n  }\n\n  \n  onFormSubmit = (contact) => {\n    let existedName = this.state.contacts.find((i) => i.name === contact.name)\n    if (existedName) {\n      alert(`${contact.name} is already in contacts`)\n    } else {this.setState({ contacts: [...this.state.contacts, contact]})}\n\n}\n\n  filteredContacts = () => {\n    if (this.state.filter !== '') {\n      // i - {id: '', name: '', number: ''}\n      return this.state.contacts.filter((i) => i.name.toLowerCase().includes(this.state.filter.toLowerCase()))\n    }\n\n    return this.state.contacts;\n  }\n\n  onFilterChange = (e) => {\n    const filter = e.target.value;\n    this.setState({ filter: filter })\n  }\n\n  onDeleteContact = (id) => {\n    console.log(id);\n    this.setState({ contacts: this.state.contacts.filter(item => item.id !== id) })\n  }\n \n  render() { \n    return(\n      <>\n        <h1>Phonebook</h1>\n        <Form onFormSubmit={this.onFormSubmit}></Form>\n        <h2>Contacts</h2>\n        <Filter filteredArray={this.filteredContacts}\n        onChangeFilter={this.onFilterChange}>\n        </Filter>\n        <ContactList \n          deleteContact={this.onDeleteContact}\n          contactsArray={this.filteredContacts()}>\n        </ContactList>\n      </>\n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__zgZ51\",\"button\":\"ContactList_button__2iUgV\",\"contactNumber\":\"ContactList_contactNumber__1NTq3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Form_button__3-2ds\"};"],"sourceRoot":""}